{
  "name": "alert",
  "type": "registry:ui",
  "dependencies": [
    "class-variance-authority",
    "lucide-react"
  ],
  "files": [
    {
      "path": "ui/alert.tsx",
      "content": "import { cva, type VariantProps } from 'class-variance-authority';\nimport { X } from 'lucide-react';\nimport type * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst alertDissmissButtonVariants = cva(\n  'absolute right-2 top-2 rounded-md p-1 text-muted-foreground/80 hover:text-foreground ',\n  {\n    variants: {\n      variant: {\n        default: 'hover:bg-accent',\n        destructive: 'hover:bg-destructive/10',\n        success: 'hover:bg-success/10',\n        warning: 'hover:bg-attention/10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nconst alertVariants = cva(\n  'relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current',\n  {\n    variants: {\n      variant: {\n        default: 'bg-surface/5 text-card-foreground',\n        success:\n          'bg-success/5 text-success border-success/30 [&>svg]:text-success *:data-[slot=alert-description]:text-success/90',\n        warning:\n          'bg-attention/5 text-attention border-attention/30 [&>svg]:text-attention *:data-[slot=alert-description]:text-attention/90',\n        destructive:\n          'bg-destructive/5 text-destructive border-destructive/30 [&>svg]:text-destructive *:data-[slot=alert-description]:text-destructive/90',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\ninterface AlertProps extends React.ComponentProps<'div'>, VariantProps<typeof alertVariants> {\n  icon?: React.ReactNode;\n  dismissible?: boolean;\n  onDismiss?: () => void;\n}\n\nfunction Alert({\n  className,\n  variant,\n  icon,\n  dismissible,\n  onDismiss,\n  children,\n  ...props\n}: AlertProps) {\n  return (\n    <div\n      data-slot='alert'\n      role='alert'\n      className={cn(alertVariants({ variant }), className, 'shadow')}\n      {...props}\n    >\n      {icon}\n      <div className='col-start-2'>{children}</div>\n      {dismissible ? (\n        <button\n          type='button'\n          aria-label='Dismiss'\n          onClick={onDismiss}\n          className={cn(alertDissmissButtonVariants({ variant }))}\n        >\n          <X className='size-4' />\n        </button>\n      ) : null}\n    </div>\n  );\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot='alert-title'\n      className={cn(\n        'col-start-2 line-clamp-1 min-h-4 text-base font-semibold tracking-tight',\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AlertDescription({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot='alert-description'\n      className={cn(\n        'text-foreground col-start-2 grid justify-items-start gap-2 text-sm [&_p]:leading-relaxed',\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AlertAction({ className, ...props }: React.ComponentProps<'div'>) {\n  return <div data-slot='alert-action' className={cn('col-start-2 mt-2', className)} {...props} />;\n}\n\nexport { Alert, AlertAction, AlertDescription, AlertTitle };\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}